// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CTTFileMan.proto

#include "CTTFileMan.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace eleWallet {
class OpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpRequest> _instance;
} _OpRequest_default_instance_;
class OpRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpRate> _instance;
} _OpRate_default_instance_;
class OpReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpReply> _instance;
} _OpReply_default_instance_;
}  // namespace eleWallet
static void InitDefaultsOpRequest_CTTFileMan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eleWallet::_OpRequest_default_instance_;
    new (ptr) ::eleWallet::OpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eleWallet::OpRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpRequest_CTTFileMan_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpRequest_CTTFileMan_2eproto}, {}};

static void InitDefaultsOpRate_CTTFileMan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eleWallet::_OpRate_default_instance_;
    new (ptr) ::eleWallet::OpRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eleWallet::OpRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpRate_CTTFileMan_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpRate_CTTFileMan_2eproto}, {}};

static void InitDefaultsOpReply_CTTFileMan_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eleWallet::_OpReply_default_instance_;
    new (ptr) ::eleWallet::OpReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eleWallet::OpReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpReply_CTTFileMan_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpReply_CTTFileMan_2eproto}, {}};

void InitDefaults_CTTFileMan_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_OpRequest_CTTFileMan_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpRate_CTTFileMan_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpReply_CTTFileMan_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_CTTFileMan_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_CTTFileMan_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_CTTFileMan_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_CTTFileMan_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpRequest, opcmd_),
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpRequest, opparams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpRate, rate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eleWallet::OpReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eleWallet::OpRequest)},
  { 7, -1, sizeof(::eleWallet::OpRate)},
  { 13, -1, sizeof(::eleWallet::OpReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eleWallet::_OpRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eleWallet::_OpRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eleWallet::_OpReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_CTTFileMan_2eproto = {
  {}, AddDescriptors_CTTFileMan_2eproto, "CTTFileMan.proto", schemas,
  file_default_instances, TableStruct_CTTFileMan_2eproto::offsets,
  file_level_metadata_CTTFileMan_2eproto, 3, file_level_enum_descriptors_CTTFileMan_2eproto, file_level_service_descriptors_CTTFileMan_2eproto,
};

const char descriptor_table_protodef_CTTFileMan_2eproto[] =
  "\n\020CTTFileMan.proto\022\teleWallet\",\n\tOpReque"
  "st\022\r\n\005opCmd\030\001 \001(\t\022\020\n\010opParams\030\002 \003(\t\"\026\n\006O"
  "pRate\022\014\n\004rate\030\001 \001(\005\"\032\n\007OpReply\022\017\n\007messag"
  "e\030\001 \001(\t2~\n\tOperation\022<\n\016DoRPCOperation\022\024"
  ".eleWallet.OpRequest\032\022.eleWallet.OpReply"
  "\"\000\0223\n\010SendRate\022\021.eleWallet.OpRate\032\022.eleW"
  "allet.OpReply\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_CTTFileMan_2eproto = {
  false, InitDefaults_CTTFileMan_2eproto, 
  descriptor_table_protodef_CTTFileMan_2eproto,
  "CTTFileMan.proto", &assign_descriptors_table_CTTFileMan_2eproto, 263,
};

void AddDescriptors_CTTFileMan_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_CTTFileMan_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_CTTFileMan_2eproto = []() { AddDescriptors_CTTFileMan_2eproto(); return true; }();
namespace eleWallet {

// ===================================================================

void OpRequest::InitAsDefaultInstance() {
}
class OpRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpRequest::kOpCmdFieldNumber;
const int OpRequest::kOpParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpRequest::OpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eleWallet.OpRequest)
}
OpRequest::OpRequest(const OpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      opparams_(from.opparams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  opcmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opcmd().size() > 0) {
    opcmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opcmd_);
  }
  // @@protoc_insertion_point(copy_constructor:eleWallet.OpRequest)
}

void OpRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OpRequest_CTTFileMan_2eproto.base);
  opcmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpRequest::~OpRequest() {
  // @@protoc_insertion_point(destructor:eleWallet.OpRequest)
  SharedDtor();
}

void OpRequest::SharedDtor() {
  opcmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpRequest& OpRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpRequest_CTTFileMan_2eproto.base);
  return *internal_default_instance();
}


void OpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:eleWallet.OpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opparams_.Clear();
  opcmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string opCmd = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eleWallet.OpRequest.opCmd");
        object = msg->mutable_opcmd();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string opParams = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("eleWallet.OpRequest.opParams");
          object = msg->add_opparams();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eleWallet.OpRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string opCmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opcmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opcmd().data(), static_cast<int>(this->opcmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eleWallet.OpRequest.opCmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string opParams = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_opparams()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opparams(this->opparams_size() - 1).data(),
            static_cast<int>(this->opparams(this->opparams_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eleWallet.OpRequest.opParams"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eleWallet.OpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eleWallet.OpRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eleWallet.OpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string opCmd = 1;
  if (this->opcmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opcmd().data(), static_cast<int>(this->opcmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpRequest.opCmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->opcmd(), output);
  }

  // repeated string opParams = 2;
  for (int i = 0, n = this->opparams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opparams(i).data(), static_cast<int>(this->opparams(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpRequest.opParams");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->opparams(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eleWallet.OpRequest)
}

::google::protobuf::uint8* OpRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eleWallet.OpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string opCmd = 1;
  if (this->opcmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opcmd().data(), static_cast<int>(this->opcmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpRequest.opCmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->opcmd(), target);
  }

  // repeated string opParams = 2;
  for (int i = 0, n = this->opparams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opparams(i).data(), static_cast<int>(this->opparams(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpRequest.opParams");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->opparams(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eleWallet.OpRequest)
  return target;
}

size_t OpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eleWallet.OpRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string opParams = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->opparams_size());
  for (int i = 0, n = this->opparams_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->opparams(i));
  }

  // string opCmd = 1;
  if (this->opcmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opcmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eleWallet.OpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpRequest* source =
      ::google::protobuf::DynamicCastToGenerated<OpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eleWallet.OpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eleWallet.OpRequest)
    MergeFrom(*source);
  }
}

void OpRequest::MergeFrom(const OpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eleWallet.OpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opparams_.MergeFrom(from.opparams_);
  if (from.opcmd().size() > 0) {

    opcmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opcmd_);
  }
}

void OpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eleWallet.OpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpRequest::CopyFrom(const OpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eleWallet.OpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpRequest::IsInitialized() const {
  return true;
}

void OpRequest::Swap(OpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpRequest::InternalSwap(OpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  opparams_.InternalSwap(CastToBase(&other->opparams_));
  opcmd_.Swap(&other->opcmd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata OpRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CTTFileMan_2eproto);
  return ::file_level_metadata_CTTFileMan_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpRate::InitAsDefaultInstance() {
}
class OpRate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpRate::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpRate::OpRate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eleWallet.OpRate)
}
OpRate::OpRate(const OpRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rate_ = from.rate_;
  // @@protoc_insertion_point(copy_constructor:eleWallet.OpRate)
}

void OpRate::SharedCtor() {
  rate_ = 0;
}

OpRate::~OpRate() {
  // @@protoc_insertion_point(destructor:eleWallet.OpRate)
  SharedDtor();
}

void OpRate::SharedDtor() {
}

void OpRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpRate& OpRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpRate_CTTFileMan_2eproto.base);
  return *internal_default_instance();
}


void OpRate::Clear() {
// @@protoc_insertion_point(message_clear_start:eleWallet.OpRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rate_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpRate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpRate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 rate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_rate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eleWallet.OpRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eleWallet.OpRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eleWallet.OpRate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eleWallet.OpRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rate = 1;
  if (this->rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eleWallet.OpRate)
}

::google::protobuf::uint8* OpRate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eleWallet.OpRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rate = 1;
  if (this->rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eleWallet.OpRate)
  return target;
}

size_t OpRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eleWallet.OpRate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rate = 1;
  if (this->rate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eleWallet.OpRate)
  GOOGLE_DCHECK_NE(&from, this);
  const OpRate* source =
      ::google::protobuf::DynamicCastToGenerated<OpRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eleWallet.OpRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eleWallet.OpRate)
    MergeFrom(*source);
  }
}

void OpRate::MergeFrom(const OpRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eleWallet.OpRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rate() != 0) {
    set_rate(from.rate());
  }
}

void OpRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eleWallet.OpRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpRate::CopyFrom(const OpRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eleWallet.OpRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpRate::IsInitialized() const {
  return true;
}

void OpRate::Swap(OpRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpRate::InternalSwap(OpRate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rate_, other->rate_);
}

::google::protobuf::Metadata OpRate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CTTFileMan_2eproto);
  return ::file_level_metadata_CTTFileMan_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OpReply::InitAsDefaultInstance() {
}
class OpReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpReply::OpReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eleWallet.OpReply)
}
OpReply::OpReply(const OpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:eleWallet.OpReply)
}

void OpReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OpReply_CTTFileMan_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpReply::~OpReply() {
  // @@protoc_insertion_point(destructor:eleWallet.OpReply)
  SharedDtor();
}

void OpReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpReply& OpReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OpReply_CTTFileMan_2eproto.base);
  return *internal_default_instance();
}


void OpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:eleWallet.OpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OpReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OpReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eleWallet.OpReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eleWallet.OpReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eleWallet.OpReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eleWallet.OpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eleWallet.OpReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eleWallet.OpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eleWallet.OpReply)
}

::google::protobuf::uint8* OpReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eleWallet.OpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eleWallet.OpReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eleWallet.OpReply)
  return target;
}

size_t OpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eleWallet.OpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eleWallet.OpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OpReply* source =
      ::google::protobuf::DynamicCastToGenerated<OpReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eleWallet.OpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eleWallet.OpReply)
    MergeFrom(*source);
  }
}

void OpReply::MergeFrom(const OpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eleWallet.OpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void OpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eleWallet.OpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpReply::CopyFrom(const OpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eleWallet.OpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpReply::IsInitialized() const {
  return true;
}

void OpReply::Swap(OpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpReply::InternalSwap(OpReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata OpReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_CTTFileMan_2eproto);
  return ::file_level_metadata_CTTFileMan_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace eleWallet
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::eleWallet::OpRequest* Arena::CreateMaybeMessage< ::eleWallet::OpRequest >(Arena* arena) {
  return Arena::CreateInternal< ::eleWallet::OpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::eleWallet::OpRate* Arena::CreateMaybeMessage< ::eleWallet::OpRate >(Arena* arena) {
  return Arena::CreateInternal< ::eleWallet::OpRate >(arena);
}
template<> PROTOBUF_NOINLINE ::eleWallet::OpReply* Arena::CreateMaybeMessage< ::eleWallet::OpReply >(Arena* arena) {
  return Arena::CreateInternal< ::eleWallet::OpReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
